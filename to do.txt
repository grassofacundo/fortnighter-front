BREAKING Handle the new job structure and combine it with the payment model.
This should mean to do many changes on both the front and the back.
Good luck!

Form:
    * Date input
        - Port logic and validation from date picker to here. It is not working right.
    * Time input
        - Add focus on time dropdown
        - Fix close when clicking outside in time input
    * Number input
        - Give more space for extra numbers (in Argentina can be up to 5 numbers). 
        UPDATE: Make the width dynamically change maybe update a css variable with every key
    * Checkbox input
        - Add hover style on checkbox

Get the job position from DB and pre fill the hour price text-form in the update section:
- Regular is working, not the rest
- Handle changing the values when switching from regular to any other workday type

Payment
- Allow saving a current payment information, making it uneditable.
- After a payment is saved, I should retrieve it with the job to set last payment date

Tax and bonus
 - Implement by payment
 - Implement an exclamation mark that shows a tooltip with the tax content in a text format

Summary:
    - Decide what information should I show
    - General testing.
    - Use summary service methods to calculate daily shift amount to avoid duplicate code

Miscellaneous
    - Create a new hook that handle a setState of an instanced object.
    This could probably do the structure clone + new class() and then a setState